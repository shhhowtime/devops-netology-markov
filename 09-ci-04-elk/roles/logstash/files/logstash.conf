input {
  beats {
    port => 5046
  }
}

filter {

  if "grok_success" not in [tags] {
    grok {
      patterns_dir => ["/usr/share/logstash/config/patterns/"]
      match => { 
        "message" => " %{IP:source_ip} \- \[\"%{HTTPDATE:timestamp}\"\] \"%{WORD:request_type} %{NOTSPACE:request} %{HTTP_PROTO:protocol}\" request_length=%{NUMBER:request_lenght} status=%{NUMBER:http_status} bytes_sent=%{NUMBER:bytes_sent} body_bytes_sent=%{NUMBER:body_bytes_sent} referer=%{NOTSPACE:referer} user_agent=\"%{GREEDYDATA:user_agent}\" upstream_addr=%{NOTSPACE:upstream_addr} upstream_status=%{NOTSPACE:upstream_status} request_time_sec=%{NOTSPACE:request_time_sec} upstream_response_time_sec=%{NOTSPACE:upstream_response_time_sec} upstream_connect_time_sec=%{GREEDYDATA:upstream_connect_time_sec} upstream_header_time_sec=%{GREEDYDATA:upstream_header_time_sec} country=%{GREEDYDATA:country_code} city=%{GREEDYDATA:city_name} real_ip=%{NOTSPACE:real_ip}"
      }
      add_tag => ["nginx", "grok_success"]
      tag_on_failure => [ ]
    }
  }

  if "grok_success" not in [tags] {
    grok {
      patterns_dir => ["/usr/share/logstash/config/patterns/"]
      match => {
        "message" => "%{IP:source_ip} \- \- \[%{HTTPDATE:timestamp}\] \"%{WORD:request_type} %{NOTSPACE:request} %{HTTP_PROTO:protocol}\" %{NUMBER:http_status} %{GREEDYDATA:response_body_size} %{GREEDYDATA:referer} \"%{GREEDYDATA:user_agent}\" \- %{UPSTREAM_ADDR:upstream_addr} \- %{NUMBER:response_time_ms} \- REQUEST \- %{GREEDYDATA:request_url} \- UPSTREAM \- URL %{GREEDYDATA:upstream_request_url} port %{GREEDYDATA:upstream_port} SERVICE %{GREEDYDATA:upstream_service} \- HEADERS \- COUNTRY %{GREEDYDATA:country_code} CITY %{GREEDYDATA:city_name} \- REAL IP %{IP:user_ip}"
      }
      add_tag => ["fabio", "grok_success"]
      tag_on_failure => [ ]
    }
  }

  if "grok_success" not in [tags] {
    grok {
      match => {
        "message" => "%{DATESTAMP:timestamp} \[%{NUMBER:event_id}\] %{NOTSPACE:mail_id} => %{NOTSPACE:client_email} %{GREEDYDATA:reciever_info} C\=\"%{NUMBER:status_code} %{GREEDYDATA:status_explanation} id\=%{NOTSPACE:remote_mail_id}\" QT\=%{SECOND:time_in_queue}s DT\=%{SECOND:delivery_time}"
      }
      add_tag => ["exim_sent", "grok_success", "exim"]
      tag_on_failure => [ ]
    }
  }

  if "grok_success" not in [tags] {
    grok {
      match => {
        "message" => "%{DATESTAMP:timestamp} \[%{NUMBER:event_id}\] %{NOTSPACE:mail_id} <= %{GREEDYDATA} H\=\(%{WORD:sender_server_name}\) \[%{IP:sender_server_ip}\]\:%{NUMBER} I\=\[%{IP:mailserver_ip}\]:%{NUMBER:mailserver_port} %{GREEDYDATA} for %{NOTSPACE:client_email}"
      }
      add_tag => ["exim_recieved", "grok_success", "exim"]
      tag_on_failure => [ ]
    }
  }

  if "grok_success" not in [tags] {
    grok {
      match => {
        "message" => "%{DATESTAMP:timestamp} \[%{NUMBER:event_id}\] %{NOTSPACE:mail_id} ** %{NOTSPACE:client_email} %{GREEDYDATA}\: SMTP %{GREEDYDATA:error_description}"
      }
      add_tag => ["exim_bounced", "grok_success", "exim"]
      tag_on_failure => [ ]
    }
  }

  if "grok_success" not in [tags] {
    grok {
      match => {
        "message" => "%{DATESTAMP:timestamp} \[%{NUMBER:event_id}\] %{NOTSPACE:mail_id} \=\= %{NOTSPACE:client_email} %{GREEDYDATA}\)%{GREEDYDATA:error_description}"
      }
      add_tag => ["exim_deferred", "grok_success", "exim"]
      tag_on_failure => [ ]
    }
  }
  if "grok_success" not in [tags] {
    grok {
      match => {
        "message" => "%{DATESTAMP:timestamp} \[%{NUMBER:event_id}\] %{NOTSPACE:mail_id} H\=%{NOTSPACE:client_mailserver} %{GREEDYDATA}\>\: %{GREEDYDATA:error_description}"
      }
      add_tag => ["exim_deferred", "grok_success", "exim"]
      tag_on_failure => [ ]
    }
  }

  if "grok_success" not in [tags] {
    grok {
      match => {
        "message" => "%{DATESTAMP:timestamp} \[%{NUMBER:event_id}\] %{NOTSPACE:mail_id} Completed QT\=%{NUMBER:time_to_send_mail}s"
      }
      add_tag => ["exim_completed", "grok_success", "exim"]
    }
  }


  if "grok_success" not in [tags] {
    grok {
      match => {
        "message" => "%{GREEDYDATA}\] SMTP connection from %{GREEDYDATA}"
      }
      add_tag => ["exim_drop"]
    }
  }
  if "grok_success" not in [tags] {
    grok {
      match => {
        "message" => "%{GREEDYDATA}\] exim user lost privilege for using \-C option"
      }
      add_tag => ["exim_drop"]
    }
  }
  if "exim_drop" in [tags] {
    drop {}
  }

  date {
    match => ['time', 'UNIX']
  }
  mutate {
    remove_tag => [ "beats_input_codec_plain_applied" ]
  }
}

output {
  if "nginx" in [tags] {
    elasticsearch { 
      hosts => ["es.service.consul:9200"] 
      index => "logstash-nginx-%{+YYYY.MM.dd}"
    }
  }
  if "fabio" in [tags] {
    elasticsearch { 
      hosts => ["es.service.consul:9200"] 
      index => "logstash-fabio-%{+YYYY.MM.dd}"
    }
  }
  if "exim" in [tags] {
    elasticsearch {
      hosts => ["es.service.consul:9200"]
      index => "logstash-exim-%{+YYYY.MM.dd}"
    }
  }
  if "grok_success" not in [tags] {
    elasticsearch { 
      hosts => ["es.service.consul:9200"] 
      index => "logstash-parse-failed-%{+YYYY.MM.dd}"
    }
  }
}
